@page
@model UserModel
@{
    ViewData["Title"] = "用户管理";
}
@using Microsoft.AspNetCore.Authorization
@using LiteAbpUBD.Business
@inject IAuthorizationService authorizationService

<link href="~/libs/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<div class="page-body">
    <div class="container-xl">
        <div class="col-12">
            <div class="card">
                <div class="card-status-top bg-blue"></div>
                <div class="table-responsive p-2">
                    <div class="toolbar">
                        <div class="form-inline" role="form">
                            <div class="btn-list input-group mb-2">
                                @if (await authorizationService.IsGrantedAsync(Permissions.Users.Create))
                                {
                                    <a href="javascript:void(0);" class="btn btn-primary d-sm-inline-block" data-bs-toggle="offcanvas" role="button" aria-controls="offcanvasEnd" onclick="page.create()">
                                        新增
                                    </a>
                                }
                                <select class="form-select" id="page-search-role" onchange="page.search()">
                                    <option value="">全部角色</option>
                                    @foreach (var role in Model.Roles)
                                    {
                                        <option value="@role.Id">@role.Name</option>
                                    }
                                </select>
                                <input type="text" class="form-control" placeholder="输入关键词查询.." id="page-search-filter">
                                <button class="btn" type="button" onclick="page.search()">查询</button>
                            </div>
                        </div>
                    </div>
                    <table id="page-table" class="table table-vcenter card-table">
                    </table>
                </div>
            </div>
        </div>

        <div class="offcanvas offcanvas-end" tabindex="-1" id="formOffcanvas" aria-labelledby="offcanvasEndLabel" style="min-width:40%;">
            <div class="offcanvas-header">
                <h2 class="offcanvas-title"></h2>
                <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <div class="mt-3 d-flex justify-content-end">
                    <button class="btn btn-primary" type="button" onclick="page.save()">
                        保存
                    </button>
                </div>
                <form id="form">
                    <div class="mb-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" />
                        <label class="form-label">用户名</label>
                        <input type="text" class="form-control" name="username" placeholder="请输入用户名" required>
                        <div class="invalid-feedback">
                            用户名不能为空
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">密码</label>
                        <input type="text" class="form-control" name="password" placeholder="请输入密码" required>
                        <div class="invalid-feedback">
                            密码不能为空
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">姓名</label>
                        <input type="text" class="form-control" name="name" placeholder="请输入姓名" required>
                        <div class="invalid-feedback">
                            姓名不能为空
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">手机号</label>
                        <input type="text" class="form-control" name="phonenumber" placeholder="请输入手机号">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">ApiSecret</label>
                        <input type="text" class="form-control" name="apisecret" placeholder="请输入ApiSecret">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">是否启用</label>
                        <input class="form-check-input" type="checkbox" name="isactive" checked="checked" value="true">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">角色设置</label>
                        <div class="form-selectgroup">
                            @foreach (var role in Model.Roles)
                            {
                                <label class="form-selectgroup-item">
                                    <input type="checkbox" name="roleIds" value="@role.Id" class="form-selectgroup-input">
                                    <span class="form-selectgroup-label">@role.Name</span>
                                </label>
                            }
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/html" id="t-table-row-operator">
    {{if abp.auth.isGranted('Admin.Users.Update')}}
    <a href="#" class="btn btn-ghost-primary" onclick="page.edit({{row}})">编辑</a>
    {{/if}}
    {{if abp.auth.isGranted('Admin.Users.Delete')}}
    <a href="#" class="btn btn-ghost-danger" onclick="page.del({{row}})">删除</a>
    {{/if}}
</script>
@section Scripts{
    <script src="~/libs/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/libs/bootstrap-table/bootstrap-table-zh-cn.min.js"></script>
    <script type="text/javascript">

        var page = {
            url: '/api/user',
            $filter: $('#page-search-filter'),
            $role: $('#page-search-role'),
            bsTable: $('#page-table'),
            bsOffcanvas: new bootstrap.Offcanvas('#formOffcanvas'),
            $offcanvasTitle: $('.offcanvas-title'),
            $form: $('#form'),
            defaultEmptyPassword: '*********',
            $id: $('#form').find('input[name=id]'),
            $username: $('#form').find('input[name=username]'),
            $password: $('#form').find('input[name=password]'),
            $RequestVerificationToken: $('#form').find('input:hidden[name="__RequestVerificationToken"]'),
            init: function () {
                var self = this;

                self.bsTable.bootstrapTable({
                    cardView: $(window).width() <= 640,
                    uniqueId: 'id',
                    toolbar: '.toolbar',
                    pageNumber: 1,
                    pageList: [10, 25, 50, 100],
                    pageSize: 10,
                    classes: 'table-striped table-hover',
                    pagination: true,
                    sidePagination: 'server',
                    columns: [{
                        field: 'userName',
                        title: '用户名',
                    }, {
                        field: 'name',
                        title: '姓名',
                    }, {
                        field: 'phoneNumber',
                        title: '手机号',
                    }, {
                        field: 'roles',
                        title: '角色',
                        formatter: function (value, row, index, field) {
                            return value.map(x => x.name).join('、');
                        },
                    }, {
                        field: 'isActive',
                        title: '状态',
                        formatter: function (value, row, index, field) {
                            return value == true ? '启用' : '禁用';
                        },
                    }, {
                        field: 'id',
                        title: '操作',
                        formatter: function (value, row, index, field) {
                            return template('t-table-row-operator', { abp: abp, row: row });
                        },
                    }],
                    ajax: function (params) {
                        abp.ajax({
                            url: self.url,
                            type: 'GET',
                            data: {
                                filter: self.$filter.val(),
                                roleId: self.$role.val(),
                                skipCount: params.data.offset,
                                maxResultCount: params.data.limit,
                                sorting: params.data.sort + ' ' + params.data.order,
                            },
                        }).then(function (res) {
                            params.success({ total: res.totalCount, rows: res.items })
                        })
                    }
                });

                //输入框回车查询
                abp.utils.inputEnter('#page-search-filter', function () { self.bsTable.bootstrapTable('refresh'); });
            },
            search: function () {
                var self = this;
                self.bsTable.bootstrapTable('refresh');
            },
            create: function () {
                var self = this;
                abp.utils.form.reset(self.$form[0]);
                abp.utils.form.setValues(self.$form[0], { id: '' });
                self.$offcanvasTitle.text('新增用户');
                self.$username.removeAttr('disabled');
                self.bsOffcanvas.show();
            },
            edit: function (row) {
                var self = this;
                row.roleIds = row.roles.map(x => x.id);
                abp.utils.form.setValues(self.$form[0], row);
                self.$offcanvasTitle.text('编辑用户');
                self.$username.attr('disabled', 'disabled');
                self.$password.val(self.defaultEmptyPassword);
                self.bsOffcanvas.show();
            },
            del: function (row) {
                var self = this;
                abp.message.confirm('删除后无法恢复', function () {
                    abp.ajax({
                        url: self.url,
                        type: "DELETE",
                        headers: {
                            "RequestVerificationToken": self.$RequestVerificationToken.val()
                        },
                        data: { id: row.id }
                    }).then(function () {
                        self.bsTable.bootstrapTable('refresh');
                        abp.notify.success('删除成功..');
                    })
                })
            },
            save: function () {
                var self = this;
                if (!self.$form[0].checkValidity()) {
                    self.$form.addClass('was-validated')
                } else {
                    if (self.$password.val() == self.defaultEmptyPassword) {
                        self.$password.attr('disabled', 'disabled');
                    }
                    var formData = self.$form.serialize();
                    self.$password.removeAttr('disabled');
                    var id = self.$id.val();
                    abp.ajax({
                        url: self.url,
                        type: id ? 'PUT' : 'POST',
                        headers: {
                            "RequestVerificationToken": self.$RequestVerificationToken.val()
                        },
                        data: formData
                    }).then(function () {
                        self.bsTable.bootstrapTable('refresh');
                        abp.notify.success('保存成功..');
                        self.bsOffcanvas.hide();
                    })
                }
            },
        };

        page.init();

    </script>
}
